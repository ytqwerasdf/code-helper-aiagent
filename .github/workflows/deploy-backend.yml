name: Deployment-backend

on:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'pom.xml'
      - '!ai-agent-frontend/**'
  workflow_dispatch: # 允许手动触发

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: CheckoutCode
        uses: actions/checkout@v4

      - name: SetupJDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: mvnBuild
        run: mvn clean package -DskipTests

      - name: transToVPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          source: "target/ai-agent-0.0.1-SNAPSHOT.jar"
          target: "/tmp/"

      - name: restartServer
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: 22
          script: |
            cd /opt/ai-agent
            
            echo "=== 开始后端部署流程 ==="
            
            # 1. 停止现有服务
            echo "1. 停止现有服务..."
            ./stop.sh
            sleep 3
            
            # 2. 备份当前jar包
            if [ -f "agent-backend/ai-agent-0.0.1-SNAPSHOT.jar" ]; then
                echo "2. 备份当前jar包..."
                cp agent-backend/ai-agent-0.0.1-SNAPSHOT.jar agent-backend/ai-agent-0.0.1-SNAPSHOT.jar.backup.$(date +%Y%m%d-%H%M%S)
            fi
            
            # 3. 移动新jar包到目标位置
            echo "3. 部署新jar包..."
            if [ -f "/tmp/ai-agent-0.0.1-SNAPSHOT.jar" ]; then
                mv /tmp/ai-agent-0.0.1-SNAPSHOT.jar agent-backend/
                echo "✅ jar包部署成功，文件大小：$(ls -lh agent-backend/ai-agent-0.0.1-SNAPSHOT.jar | awk '{print $5}')"
            else
                echo "❌ 错误：临时jar包不存在"
                exit 1
            fi
            
            # 4. 启动新服务
            echo "4. 启动新服务..."
            ./start.sh
            
            # 5. 等待服务启动
            echo "5. 等待服务启动..."
            sleep 15
            
            # 6. 健康检查
            echo "6. 执行健康检查..."
            for i in {1..5}; do
                if curl -f http://localhost:8123/api/actuator/health > /dev/null 2>&1; then
                    echo "✅ 服务健康检查通过！"
                    break
                else
                    echo "⏳ 健康检查失败，重试 $i/5..."
                    sleep 10
                fi
            done
            
            # 7. 显示服务状态
            echo "7. 服务状态检查..."
            if pgrep -f "ai-agent-0.0.1-SNAPSHOT.jar" > /dev/null; then
                echo "✅ 服务进程运行正常"
                echo "进程信息："
                ps aux | grep "ai-agent-0.0.1-SNAPSHOT.jar" | grep -v grep
            else
                echo "❌ 服务进程未找到"
                echo "查看最新日志："
                tail -20 logs/*.log 2>/dev/null || echo "暂无日志文件"
                exit 1
            fi
            
            echo "=== 后端部署完成 ==="